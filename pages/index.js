import Head from 'next/head';
import Image from 'next/image';
import styles from '../styles/Home.module.css';
import { SiweMessage } from 'siwe';
import { ethers } from 'ethers';
import { useState, useEffect } from 'react';

export default function Home() {
  let domain;
  let origin;
  let provider;
  let signer;
  const [account, setAccount] = useState(null);
  const [error, setError] = useState(null);
  const [verify, setVerify] = useState(false);

  if (typeof window !== 'undefined') {
    domain = window.location.host;
    origin = window.location.origin;
    provider = new ethers.providers.Web3Provider(window.ethereum);
    signer = provider.getSigner();
  }

  async function createSiweMessage(address, statement) {
    const res = await fetch('/api/nonce', {
      credentials: 'include',
    });
    const message = new SiweMessage({
      domain,
      address,
      statement,
      uri: origin,
      version: '1',
      chainId: '1',
      nonce: await res.text(),
    });
    return message.prepareMessage();
  }

  async function connectWallet() {
    const address = await provider.send('eth_requestAccounts', []).catch(() => console.log('user rejected request'));
    setAccount(address);
  }

  async function signInWithEthereum() {
    const message = await createSiweMessage(await signer.getAddress(), 'Sign in with Ethereum to the app.');
    const signature = await signer.signMessage(message);
    const verify = await sendForVerification(message, signature);
    if (!verify.verified) {
      setError('Signature cannot be verified');
      return;
    } else {
      setVerify(true);
    }
  }

  async function sendForVerification(message, signature) {
    const res = await fetch('/api/verify', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ message, signature }),
      credentials: 'include',
    });

    return res.json();
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>
        <p className={styles.description}>A Next.js + <a href="https://login.xyz">Sign-in with Ethereum</a> starter kit</p>
        <div className={styles.btnContainer}>
          <button id="connectWalletBtn" onClick={() => connectWallet()}>
            Connect Wallet
          </button>
          <button id="siweBtn" onClick={signInWithEthereum}>
            Sign-in with Ethereum
          </button>
        </div>
        {account && <p>Account: {account}</p>}
        {error && <p>Error: {error}</p>}
        {verify && <p>Verified!</p>}
      </main>

      <footer className={styles.footer}>
        <a href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app" target="_blank" rel="noopener noreferrer">
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}
